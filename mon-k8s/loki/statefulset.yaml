apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: monitoring
  name: loki
  labels:
    app: loki
spec:
  volumeClaimTemplates: []
  podManagementPolicy: OrderedReady
  replicas: 1
  selector:
    matchLabels:
      app: loki
  serviceName: loki-headless
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: loki      
      annotations:
        prometheus.io/port: http-metrics
        prometheus.io/scrape: "true"
    spec:
      securityContext:
        fsGroup: 10001
        runAsGroup: 10001
        runAsNonRoot: true
        runAsUser: 10001
      containers:
        - name: loki
          image: grafana/loki:2.1.0 
          imagePullPolicy: IfNotPresent
          args:
            - "-config.file=/etc/loki/loki.yaml"
          volumeMounts:
            - name: config
              mountPath: "/etc/loki"            
            - name: storage
              mountPath: /data
            - name: db
              mountPath: /db
          ports:
            - name: http-metrics
              containerPort: 3100
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          readinessProbe:
            httpGet:
              path: /ready
              port: http-metrics
            initialDelaySeconds: 45
          securityContext:
            readOnlyRootFilesystem: false
      terminationGracePeriodSeconds: 60
      volumes:
        - name: config
          configMap: 
            name: loki     
        - name: storage
          emptyDir: {}
        - name: db
          emptyDir: {}
